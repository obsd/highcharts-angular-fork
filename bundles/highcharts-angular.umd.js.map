{"version":3,"file":"highcharts-angular.umd.js.map","sources":["ng://highcharts-angular/lib/highcharts-chart.component.ts","ng://highcharts-angular/lib/highcharts-chart.module.ts"],"sourcesContent":["import { Component, ElementRef, EventEmitter, Input, OnDestroy, Output, NgZone, OnChanges, SimpleChanges } from '@angular/core';\nimport * as Highcharts from 'highcharts';\n\n@Component({\n  selector: 'highcharts-chart',\n  template: ''\n})\nexport class HighchartsChartComponent implements OnDestroy, OnChanges {\n  @Input() Highcharts: typeof Highcharts;\n  @Input() constructorType: string;\n  @Input() callbackFunction: Highcharts.ChartCallbackFunction;\n  @Input() oneToOne: boolean; // #20\n  @Input() runOutsideAngular: boolean; // #75\n  @Input() options: Highcharts.Options;\n  @Input() update: boolean;\n\n  @Output() updateChange = new EventEmitter<boolean>(true);\n  @Output() chartInstance = new EventEmitter<Highcharts.Chart>(); // #26\n\n  private chart: Highcharts.Chart;\n\n  constructor(\n    private el: ElementRef,\n    private _zone: NgZone // #75\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const update = changes.update && changes.update.currentValue;\n    if (changes.options || update) {\n      this.wrappedUpdateOrCreateChart();\n      if (update) {\n        this.updateChange.emit(false); // clear the flag after update\n      }\n    }\n  }\n\n  wrappedUpdateOrCreateChart() { // #75\n    if (this.runOutsideAngular) {\n      this._zone.runOutsideAngular(() => {\n        this.updateOrCreateChart()\n      });\n    } else {\n      this.updateOrCreateChart();\n    }\n  }\n\n  updateOrCreateChart() {\n    if (this.chart && this.chart.update) {\n      this.chart.update(this.options, true, this.oneToOne || false);\n    } else {\n      this.chart = (this.Highcharts as any)[this.constructorType || 'chart'](\n        this.el.nativeElement,\n        this.options,\n        this.callbackFunction || null\n      );\n\n      // emit chart instance on init\n      this.chartInstance.emit(this.chart);\n    }\n  }\n\n  ngOnDestroy() { // #44\n    if (this.chart) {  // #56\n      this.chart.destroy();\n      this.chart = null;\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {HighchartsChartComponent} from './highcharts-chart.component';\n\n@NgModule({\n  declarations: [ HighchartsChartComponent ],\n  exports: [ HighchartsChartComponent ]\n})\nexport class HighchartsChartModule {}\n"],"names":["EventEmitter","Component","ElementRef","NgZone","Input","Output","NgModule"],"mappings":";;;;;;;;;;AAAA;QAqBE,kCACU,IACA;;YADA,OAAE,GAAF,EAAE;YACF,UAAK,GAAL,KAAK;gCAPU,IAAIA,iBAAY,CAAU,IAAI,CAAC;iCAC9B,IAAIA,iBAAY,EAAoB;SAO1D;;;;;QAEJ,8CAAW;;;;YAAX,UAAY,OAAsB;gBAChC,qBAAM,MAAM,GAAG,OAAO,cAAW,OAAO,WAAQ,YAAY,CAAC;gBAC7D,IAAI,OAAO,eAAY,MAAM,EAAE;oBAC7B,IAAI,CAAC,0BAA0B,EAAE,CAAC;oBAClC,IAAI,MAAM,EAAE;wBACV,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;qBAC/B;iBACF;aACF;;;;QAED,6DAA0B;;;YAA1B;gBAAA,iBAQC;;gBAPC,IAAI,IAAI,CAAC,iBAAiB,EAAE;oBAC1B,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC;wBAC3B,KAAI,CAAC,mBAAmB,EAAE,CAAA;qBAC3B,CAAC,CAAC;iBACJ;qBAAM;oBACL,IAAI,CAAC,mBAAmB,EAAE,CAAC;iBAC5B;aACF;;;;QAED,sDAAmB;;;YAAnB;gBACE,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;oBACnC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,EAAE,IAAI,CAAC,QAAQ,IAAI,KAAK,CAAC,CAAC;iBAC/D;qBAAM;oBACL,IAAI,CAAC,KAAK,GAAG,mBAAC,IAAI,CAAC,UAAiB,GAAE,IAAI,CAAC,eAAe,IAAI,OAAO,CAAC,CACpE,IAAI,CAAC,EAAE,CAAC,aAAa,EACrB,IAAI,CAAC,OAAO,EACZ,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAC9B,CAAC;;oBAGF,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;iBACrC;aACF;;;;QAED,8CAAW;;;YAAX;;gBACE,IAAI,IAAI,CAAC,KAAK,EAAE;;oBACd,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;oBACrB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;iBACnB;aACF;;oBA/DFC,cAAS,SAAC;wBACT,QAAQ,EAAE,kBAAkB;wBAC5B,QAAQ,EAAE,EAAE;qBACb;;;;;wBANmBC,eAAU;wBAA0CC,WAAM;;;;mCAQ3EC,UAAK;wCACLA,UAAK;yCACLA,UAAK;iCACLA,UAAK;0CACLA,UAAK;gCACLA,UAAK;+BACLA,UAAK;qCAELC,WAAM;sCACNA,WAAM;;uCAjBT;;;;;;;ACAA;;;;oBAGCC,aAAQ,SAAC;wBACR,YAAY,EAAE,CAAE,wBAAwB,CAAE;wBAC1C,OAAO,EAAE,CAAE,wBAAwB,CAAE;qBACtC;;;;oCAND;;;;;;;;;;;;;;;;;;;;;;;;"}
